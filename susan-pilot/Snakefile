rule all:
    input:
         "barcodes/barcode_assoc_table.pass.tab"

# TODO: don't really need exact match for the other seq. could allow some mismatches
# do all seqs have as much filler as we ask for?

# Step 1: get readname->barcode
rule proc_read1:
    input:
        "/storage/agoren/susan/pSTR1_S1_L001_R1_001.fastq.gz"
    output:
        "barcodes/read1_barcodes.tab"
    shell:
        "./proc_read1.sh {input} > {output}"

# Step 2: extract fastq with variable seq from read 2
rule proc_read2:
    input:
        "/storage/agoren/susan/pSTR1_S1_L001_R2_001.fastq.gz"
    output:
        "barcodes/read2.fq"
    shell:
        "./proc_read2.sh {input} > {output}"

# Step 3: align with bwa to special reference
rule align:
    input:
        "barcodes/read2.fq",
        "barcodes/mpra_pilot_ref.fa"
    output:
        "barcodes/read2.bam"
    shell:
        "bwa index {input[1]} && bwa mem {input[1]} {input[0]} | samtools view -bS - > {output}"

# Step 4: filter bam file
rule proc_align:
    input:
        "barcodes/read2.bam"
    output:
        "barcodes/read2_filtered.tab"
    shell:
        "samtools view {input} | awk '($6!~/S|H/)' | cut -f 1,3 > {output}"

# Step 5: process filler region
rule proc_filler:
    input:
        "/storage/agoren/susan/pSTR1_S1_L001_R1_001.fastq.gz"
    output:
        "barcodes/read1_filler.tab"
    shell:
        "./get_filler.sh {input} > {output}"

# Step 6: merge everything together
rule merge_tables:
    input:
        "barcodes/read1_filler.tab",
        "barcodes/read1_barcodes.tab",
        "barcodes/read2_filtered.tab"
    output:
        "barcodes/barcode_assoc_table.tab"
    shell:
        "./merge_bc_tables.py {input[0]} {input[1]} {input[2]} > {output}"

# Step 7: Aggregate barcode info
rule filter_table:
    input:
        "barcodes/barcode_assoc_table.tab"
    output:
        "barcodes/barcode_assoc_table.filtered.tab"
    shell:
        "./filter_bc_tables.py {input} > {output}"

rule final_table:
    input:
        "barcodes/barcode_assoc_table.filtered.tab"
    output:
        "barcodes/barcode_assoc_table.pass.tab"
    shell:
        "cat {input} | grep PASS | cut -f 1-2 > {output}"